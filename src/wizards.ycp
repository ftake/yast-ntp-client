/**
 * File:	include/ntp-client/wizards.ycp
 * Package:	Configuration of ntp-client
 * Summary:	Wizards definitions
 * Authors:	Jiri Srain <jsrain@suse.cz>
 *
 * $Id$
 */

{

textdomain "ntp-client";

import "Wizard";
import "Label";

include "wizard/sequencer.ycp";

include "ntp-client/dialogs.ycp";

/**
 * Whole configuration of ntp-client
 * @return sequence result
 */
global define symbol NtpClientSequence() ``{

    map aliases = $[
	"read"	: [ ``( ReadDialog() ), true ],
	"main"	:   ``( MainSequence() ),
	"write"	: [ ``( WriteDialog() ), true ]
    ];

    map sequence = $[
	"ws_start" : "read",
	"read" : $[
	    `abort	: `abort,
	    `next	: "main"
	],
	"main" : $[
	    `abort	: `abort,
	    `next	: "write"
	],
	"write" : $[
	    `abort	: `abort,
	    `next	: `next
	]
    ];

    Wizard::CreateDialog();
    any ret = WizardSequencer(aliases, sequence);

    UI::CloseDialog();
    return ret;
}

/**
 * Autoyast configuration of ntp-client
 * @return sequence result
 */
global define symbol NtpClientAutoSequence() ``{

    map aliases = $[
	"main"	:   ``( MainSequence() )
    ];

    map sequence = $[
	"ws_start" : "main",
	"main" : $[
	    `abort	: `abort,
		`next   : `next
	]
    ];

    // dialog caption
    string caption = _("NTP Client Configuration");
    // label
    term contents = `Label(_("Initializing ..."));

    Wizard::CreateDialog();
    Wizard::SetContentsButtons(caption, contents, "",
	    Label::BackButton(), Label::NextButton());

    any ret = WizardSequencer(aliases, sequence);

    UI::CloseDialog();
    return ret;
}

/**
 * Main workflow of the ntp-client configuration
 * @return sequence result
 */
global define symbol MainSequence() ``{

    map aliases = $[
	"main"		:   ``(MainDialog ()),
	"server"	:   ``(ServerDialog ()),
	"peer"		:   ``(PeerDialog ()),
	"radio"		:   ``(RadioDialog ()),
	"bcast"		:   ``(BCastDialog ()),
	"bcastclient"	:   ``(BCastClientDialog ()),
	"store_record"	: [ ``(StoreRecord ()), true],
    ];

    map sequence = $[
	"ws_start" : "main",
	"main" : $[
	    `abort	: `abort,
	    `next	: `next,
	    `peer	: "peer",
	    `server	: "server",
	    `radio	: "radio",
	    `bcast	: "bcast",
	    `bcastclient: "bcastclient",
	],
	"peer" : $[
	    `abort	: `abort,
	    `next	: "store_record",
	],
	"server" : $[
	    `abort	: `abort,
	    `next	: "store_record",
	],
	"radio" : $[
	    `abort	: `abort,
	    `next	: "store_record",
	],
	"bcast" : $[
	    `abort	: `abort,
	    `next	: "store_record",
	],
	"bcastclient" : $[
	    `abort	: `abort,
	    `next	: "store_record",
	],
	"store_record" : $[
	    `abort	: `abort,
	    `next	: "main",
	],
    ];

    any ret = WizardSequencer(aliases, sequence);

    return ret;
}

/* EOF */
}
